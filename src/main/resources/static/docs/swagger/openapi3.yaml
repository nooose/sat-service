openapi: 3.0.1
info:
  title: API 규격
  description: API 규격 문서
  version: 0.0.1
servers:
- url: http://localhost:8080
  description: 로컬 서버
tags: []
paths:
  /board/articles:
    get:
      tags:
      - 게시판 > 게시글
      summary: 게시글 목록 조회
      description: 게시글 목록 조회
      operationId: article-rest-controller-test/게시글 목록 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleWithCount'
              examples:
                article-rest-controller-test/게시글 목록 조회:
                  value: |-
                    [ {
                      "id" : 1,
                      "title" : "제목 A",
                      "category" : "IT",
                      "commentCount" : 0,
                      "likeCount" : 0,
                      "createdDateTime" : "2024-05-19T02:14:26.52066"
                    }, {
                      "id" : 2,
                      "title" : "제목 B",
                      "category" : "IT",
                      "commentCount" : 0,
                      "likeCount" : 0,
                      "createdDateTime" : "2024-05-19T02:14:26.520679"
                    }, {
                      "id" : 3,
                      "title" : "제목 C",
                      "category" : "스포츠",
                      "commentCount" : 0,
                      "likeCount" : 0,
                      "createdDateTime" : "2024-05-19T02:14:26.520683"
                    } ]
    post:
      tags:
      - 게시판 > 게시글
      summary: 게시글 생성
      description: 게시글 생성
      operationId: article-rest-controller-test/게시글 생성
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ArticleCreateCommand'
            examples:
              article-rest-controller-test/게시글 생성:
                value: |-
                  {
                    "title" : "테스트 제목",
                    "content" : "테스트 내용",
                    "categoryId" : 1
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 게시글 URI
              schema:
                type: string
  /board/categories:
    get:
      tags:
      - 게시판 > 카테고리
      summary: 카테고리 조회
      description: 카테고리 조회
      operationId: category-rest-controller-test/카테고리 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingletonList'
              examples:
                category-rest-controller-test/카테고리 조회:
                  value: |-
                    [ {
                      "id" : 1,
                      "name" : "컴퓨터",
                      "children" : [ {
                        "id" : 2,
                        "name" : "맥북",
                        "parentId" : 1
                      } ]
                    } ]
    post:
      tags:
      - 게시판 > 카테고리
      summary: 카테고리 생성
      description: 카테고리 생성
      operationId: category-rest-controller-test/카테고리 생성
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CategoryCreateCommand'
            examples:
              category-rest-controller-test/카테고리 생성:
                value: |-
                  {
                    "name" : "IT",
                    "parentId" : 1
                  }
      responses:
        "200":
          description: "200"
  /board/articles/{articleId}:
    get:
      tags:
      - 게시판 > 게시글
      summary: 게시글 조회
      description: 게시글 조회
      operationId: article-rest-controller-test/게시글 조회
      parameters:
      - name: articleId
        in: path
        description: 게시글 ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleQuery'
              examples:
                article-rest-controller-test/게시글 조회:
                  value: |-
                    {
                      "id" : 1,
                      "title" : "제목",
                      "content" : "내용",
                      "category" : "IT",
                      "hasLike" : false,
                      "createdBy" : 1
                    }
    put:
      tags:
      - 게시판 > 게시글
      summary: 게시글 수정
      description: 게시글 수정
      operationId: article-rest-controller-test/게시글 수정
      parameters:
      - name: articleId
        in: path
        description: 게시글 ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ArticleUpdateCommand'
            examples:
              article-rest-controller-test/게시글 수정:
                value: |-
                  {
                    "title" : "수정 제목",
                    "content" : "수정 내용"
                  }
      responses:
        "200":
          description: "200"
    delete:
      tags:
      - 게시판 > 게시글
      summary: 게시글 삭제
      description: Soft delete 수행
      operationId: article-rest-controller-test/게시글 삭제
      parameters:
      - name: articleId
        in: path
        description: 게시글 ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
  /board/articles/{articleId}:like:
    post:
      tags:
      - 게시판 > 게시글
      summary: 게시글 좋아요
      description: 게시글에 좋아요를 표시
      operationId: article-rest-controller-test/게시글 좋아요
      parameters:
      - name: articleId
        in: path
        description: 게시글 ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
  /board/categories/{id}:
    put:
      tags:
      - 게시판 > 카테고리
      summary: 카테고리 수정
      description: 카테고리 수정
      operationId: category-rest-controller-test/카테고리 수정
      parameters:
      - name: id
        in: path
        description: 카테고리 ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CategoryUpdateCommand'
            examples:
              category-rest-controller-test/카테고리 수정:
                value: |-
                  {
                    "name" : "수정",
                    "parentId" : 1
                  }
      responses:
        "200":
          description: "200"
    delete:
      tags:
      - 게시판 > 카테고리
      summary: 카테고리 삭제
      description: Hard delete 수행
      operationId: category-rest-controller-test/카테고리 삭제
      parameters:
      - name: id
        in: path
        description: 카테고리 ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
  /board/comments/{id}:
    put:
      tags:
      - 게시판 > 댓글
      summary: 댓글 수정
      description: 댓글 수정
      operationId: comment-rest-controller-test/댓글 수정
      parameters:
      - name: id
        in: path
        description: 댓글 ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/board-comments-id-1563718501'
            examples:
              comment-rest-controller-test/댓글 수정:
                value: |-
                  {
                    "content" : "너무너무 재밌어요"
                  }
      responses:
        "200":
          description: "200"
    delete:
      tags:
      - 게시판 > 댓글
      summary: 댓글 삭제
      description: 댓글 삭제
      operationId: comment-rest-controller-test/댓글 삭제
      parameters:
      - name: id
        in: path
        description: 댓글 ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
  /board/articles/{articleId}/comments:
    get:
      tags:
      - 게시판 > 댓글
      summary: 댓글 목록 조회
      description: 댓글 목록 조회
      operationId: comment-rest-controller-test/댓글 목록 조회
      parameters:
      - name: articleId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/board-articles-articleId-comments-848727755'
              examples:
                comment-rest-controller-test/댓글 목록 조회:
                  value: |-
                    [ {
                      "memberId" : 1,
                      "memberName" : "test1",
                      "id" : 1,
                      "content" : "유익한 게시글 입니다.",
                      "children" : [ {
                        "memberId" : 2,
                        "memberName" : "test2",
                        "id" : 2,
                        "content" : "유익한 부모 댓글 입니다.",
                        "isDeleted" : false
                      } ],
                      "isDeleted" : false
                    } ]
    post:
      tags:
      - 게시판 > 댓글
      summary: 댓글 생성
      description: 댓글 생성
      operationId: comment-rest-controller-test/댓글 생성
      parameters:
      - name: articleId
        in: path
        description: 게시글 ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/board-articles-articleId-comments-1938465350'
            examples:
              comment-rest-controller-test/댓글 생성:
                value: |-
                  {
                    "content" : "이 게시글은 정말 유익합니다.",
                    "parentId" : 2
                  }
      responses:
        "201":
          description: "201"
          headers:
            Location:
              description: 게시글 URI
              schema:
                type: string
  /user/articles:
    get:
      tags:
      - 사용자
      summary: 자신이 작성한 게시글 목록 조회
      description: 자신이 작성한 게시글 목록 조회
      operationId: member-rest-controller-test/자신이 작성한 게시글 목록 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleWithCount'
              examples:
                member-rest-controller-test/자신이 작성한 게시글 목록 조회:
                  value: |-
                    [ {
                      "id" : 1,
                      "title" : "테스트 A",
                      "category" : "IT",
                      "commentCount" : 10,
                      "likeCount" : 15,
                      "createdDateTime" : "2024-05-19T02:14:27.088823"
                    }, {
                      "id" : 2,
                      "title" : "테스트 B",
                      "category" : "IT",
                      "commentCount" : 3,
                      "likeCount" : 5,
                      "createdDateTime" : "2024-05-19T02:14:27.088832"
                    } ]
  /user/comments:
    get:
      tags:
      - 사용자
      summary: 자신이 작성한 댓글 목록 조회
      description: 자신이 작성한 댓글 목록 조회
      operationId: member-rest-controller-test/자신이 작성한 댓글 목록 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentWithArticle'
              examples:
                member-rest-controller-test/자신이 작성한 댓글 목록 조회:
                  value: |-
                    [ {
                      "id" : 1,
                      "content" : "테스트 A",
                      "articleId" : 1,
                      "articleTitle" : "제목 A",
                      "createdDateTime" : "2024-05-19T02:14:27.145697"
                    }, {
                      "id" : 2,
                      "content" : "테스트 B",
                      "articleId" : 2,
                      "articleTitle" : "제목 B",
                      "createdDateTime" : "2024-05-19T02:14:27.145711"
                    } ]
  /user/likes:
    get:
      tags:
      - 사용자
      summary: 좋아요 누른 게시글 목록 조회
      description: 좋아요 누른 게시글 목록 조회
      operationId: member-rest-controller-test/좋아요 누른 게시글 목록 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikedArticleSimpleQuery'
              examples:
                member-rest-controller-test/좋아요 누른 게시글 목록 조회:
                  value: |-
                    [ {
                      "articleId" : 1,
                      "title" : "좋아요 A"
                    }, {
                      "articleId" : 2,
                      "title" : "좋아요 B"
                    } ]
  /user/members:
    get:
      tags:
      - 사용자
      summary: 사용자 목록 조회
      description: 사용자 목록 조회
      operationId: member-rest-controller-test/사용자 목록 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberSimpleQuery'
              examples:
                member-rest-controller-test/사용자 목록 조회:
                  value: |-
                    [ {
                      "id" : 1,
                      "name" : "홍길동",
                      "email" : "adminA@sat.com",
                      "createdDateTime" : "2024-01-01T07:00:00"
                    }, {
                      "id" : 2,
                      "name" : "홍동길",
                      "email" : "adminB@sat.com",
                      "createdDateTime" : "2024-01-01T07:00:00"
                    }, {
                      "id" : 3,
                      "name" : "홍길돔",
                      "email" : "adminC@sat.com",
                      "createdDateTime" : "2024-01-01T07:00:00"
                    } ]
  /user/points:
    get:
      tags:
      - 사용자
      summary: 포인트 적립/사용 이력 조회
      description: 포인트 적립/사용 이력 조회
      operationId: member-rest-controller-test/포인트 이력 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyPointQuery'
              examples:
                member-rest-controller-test/포인트 이력 조회:
                  value: |-
                    [ {
                      "id" : 1,
                      "point" : 10,
                      "type" : "로그인 적립",
                      "createdDateTime" : "2024-05-19T02:14:27.178095"
                    }, {
                      "id" : 2,
                      "point" : 10,
                      "type" : "로그인 적립",
                      "createdDateTime" : "2024-05-20T02:14:27.178101"
                    } ]
  /user/members/me:
    get:
      tags:
      - 사용자
      summary: 사용자 목록 조회
      description: 사용자 목록 조회
      operationId: member-rest-controller-test/자신의 정보 조회
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberInformation'
              examples:
                member-rest-controller-test/자신의 정보 조회:
                  value: |-
                    {
                      "id" : 1,
                      "name" : "김영철",
                      "nickname" : "김영철",
                      "email" : "admin@sat.com",
                      "avatar" : "",
                      "point" : 100
                    }
    put:
      tags:
      - 사용자
      summary: 사용자 정보 수정
      description: 사용자 정보 수정
      operationId: member-rest-controller-test/자신의 정보 수정
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/MemberUpdateCommand'
            examples:
              member-rest-controller-test/자신의 정보 수정:
                value: |-
                  {
                    "nickname" : "닉네임"
                  }
      responses:
        "200":
          description: "200"
components:
  schemas:
    ArticleUpdateCommand:
      title: ArticleUpdateCommand
      required:
      - content
      - title
      type: object
      properties:
        title:
          type: string
          description: 게시글 제목
        content:
          type: string
          description: 게시글 내용
    SingletonList:
      title: SingletonList
      type: array
      items:
        required:
        - id
        - name
        type: object
        properties:
          children:
            type: array
            items:
              required:
              - id
              - name
              - parentId
              type: object
              properties:
                name:
                  type: string
                  description: 자식 카테고리 이름
                id:
                  type: number
                  description: 자식 카테고리 ID
                parentId:
                  type: number
                  description: 부모 카테고리 ID
          name:
            type: string
            description: 카테고리 이름
          id:
            type: number
            description: 카테고리 ID
    CommentWithArticle:
      title: CommentWithArticle
      type: array
      items:
        required:
        - articleId
        - articleTitle
        - content
        - createdDateTime
        - id
        type: object
        properties:
          articleTitle:
            type: string
            description: 게시글 제목
          articleId:
            type: number
            description: 게시글 ID
          createdDateTime:
            type: string
            description: 댓글 작성 시간
          id:
            type: number
            description: 댓글 ID
          content:
            type: string
            description: 댓글 내용
    ArticleQuery:
      title: ArticleQuery
      required:
      - category
      - content
      - createdBy
      - hasLike
      - id
      - title
      type: object
      properties:
        createdBy:
          type: number
          description: 게시글 작성자 ID
        hasLike:
          type: boolean
          description: 좋아요 여부
        id:
          type: number
          description: 게시글 ID
        category:
          type: string
          description: 카테고리
        title:
          type: string
          description: 게시글 제목
        content:
          type: string
          description: 게시글 내용
    ArticleCreateCommand:
      title: ArticleCreateCommand
      required:
      - categoryId
      - content
      - title
      type: object
      properties:
        title:
          type: string
          description: 게시글 제목
        categoryId:
          type: number
          description: 카테고리 ID
        content:
          type: string
          description: 게시글 내용
    board-articles-articleId-comments-1938465350:
      required:
      - content
      type: object
      properties:
        parentId:
          type: number
          description: 댓글 부모 ID
          nullable: true
        content:
          type: string
          description: 댓글 내용
    MemberSimpleQuery:
      title: MemberSimpleQuery
      type: array
      items:
        required:
        - createdDateTime
        - email
        - id
        - name
        type: object
        properties:
          name:
            type: string
            description: 이름
          createdDateTime:
            type: string
            description: 가입 시간
          id:
            type: number
            description: 사용자 ID
          email:
            type: string
            description: 이메일
    board-comments-id-1563718501:
      required:
      - content
      type: object
      properties:
        content:
          type: string
          description: 댓글 내용
    MyPointQuery:
      title: MyPointQuery
      type: array
      items:
        required:
        - createdDateTime
        - id
        - point
        - type
        type: object
        properties:
          createdDateTime:
            type: string
            description: 포인트 적립/사용 시간
          id:
            type: number
            description: 포인트 ID
          type:
            type: string
            description: 포인트 적립/사용 타입
          point:
            type: number
            description: 포인트 적립/사용 값
    CategoryUpdateCommand:
      title: CategoryUpdateCommand
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: 카테고리 이름
        parentId:
          type: number
          description: 카테고리 부모 ID
          nullable: true
    LikedArticleSimpleQuery:
      title: LikedArticleSimpleQuery
      type: array
      items:
        required:
        - articleId
        - title
        type: object
        properties:
          articleId:
            type: number
            description: 게시글 ID
          title:
            type: string
            description: 게시글 제목
    ArticleWithCount:
      title: ArticleWithCount
      type: array
      items:
        required:
        - category
        - commentCount
        - createdDateTime
        - id
        - likeCount
        - title
        type: object
        properties:
          createdDateTime:
            type: string
            description: 게시글 작성 시간
          likeCount:
            type: number
            description: 좋아요 수
          id:
            type: number
            description: 게시글 ID
          category:
            type: string
            description: 카테고리
          title:
            type: string
            description: 게시글 제목
          commentCount:
            type: number
            description: 댓글 수
    MemberInformation:
      title: MemberInformation
      required:
      - avatar
      - email
      - id
      - name
      - nickname
      - point
      type: object
      properties:
        nickname:
          type: string
          description: 닉네임
        name:
          type: string
          description: 이름
        avatar:
          type: string
          description: Avatar 사진 URL
        id:
          type: number
          description: 사용자 ID
        point:
          type: number
          description: 포인트
        email:
          type: string
          description: 이메일
    MemberUpdateCommand:
      title: MemberUpdateCommand
      required:
      - nickname
      type: object
      properties:
        nickname:
          type: string
          description: 변경할 닉네임
    CategoryCreateCommand:
      title: CategoryCreateCommand
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: 카테고리 이름
        parentId:
          type: number
          description: 카테고리 부모 ID
          nullable: true
    board-articles-articleId-comments-848727755:
      type: array
      items:
        required:
        - content
        - id
        - isDeleted
        - memberId
        - memberName
        type: object
        properties:
          isDeleted:
            type: boolean
            description: 댓글 삭제 여부
          children:
            type: array
            items:
              required:
              - content
              - id
              - isDeleted
              - memberId
              - memberName
              type: object
              properties:
                isDeleted:
                  type: boolean
                  description: 댓글 삭제 여부
                memberName:
                  type: string
                  description: 작성자 닉네임
                id:
                  type: number
                  description: 자식 댓글 ID
                content:
                  type: string
                  description: 자식 댓글 내용
                memberId:
                  type: number
                  description: 작성자 ID
          memberName:
            type: string
            description: 작성자 닉네임
          id:
            type: number
            description: 댓글 ID
          content:
            type: string
            description: 댓글 내용
          memberId:
            type: number
            description: 작성자 ID
